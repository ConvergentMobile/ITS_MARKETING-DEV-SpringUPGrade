<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                                       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                                      http://www.springframework.org/schema/context  
                                       http://www.springframework.org/schema/context/spring-context-4.3.xsd  
                                    http://www.springframework.org/schema/beans  
                                    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
                                     http://www.springframework.org/schema/jee  
                                     http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
									http://www.springframework.org/schema/cache 
									http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

	<context:annotation-config/>
	<context:component-scan base-package="jms"/>
	
 <jee:jndi-lookup jndi-name="jms/ConnectionFactory" id="jmsFactory" resource-ref="true"
                         expected-type="javax.jms.ConnectionFactory" lookup-on-startup="false"/>
 
 <jee:jndi-lookup id="destination" jndi-name="jms/us411Queue" resource-ref="true"/>
                        
	<bean id="jndiTemplate"
		class="org.springframework.jndi.JndiTemplate">
	</bean>
  
   <bean id="sendMsgJob" class="org.quartz.JobDetail">
      <property name="jobClass" value="user.SendMsgJob" />     
 </bean>

   <!--  for quartz jobstore persistence -->
	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
         <property name="jndiName" value="jdbc/GXS_DS" />  
         <property name="resourceRef" value="true" />
	</bean>

	<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"> 
	  	<property name="jobFactory">
    		<bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory"/>
  		</property> 	        	
		<property name="applicationContextSchedulerContextKey">  
	      <value>applicationContext</value>  
	  </property>  
	  <property name="configLocation" value="classpath:quartz.properties"/>
	  <property name="dataSource" ref="dataSource"/>	  
	</bean> 

  <!-- Spring JMS Template -->

  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="jmsFactory"/>
  </bean> 

  <bean id="listenerContainer"
        class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="concurrentConsumers" value="3" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="destination" ref="destination" />
        <property name="messageListener" ref="consumer" />
  </bean>

  <!-- a sample POJO which uses a Spring JmsTemplate -->
  <bean id="producer" class="jms.JMSProducer">
    <property name="template" ref="jmsTemplate"/>
    <property name="destination" ref="destination" />
  </bean>

  <!-- a sample POJO consumer -->
   <bean id="consumer" class="jms.JMSConsumer"/>
   
 <!-- 
 	<cache:annotation-driven/>
 
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"
          p:cacheManager-ref="ehcache"/>
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>
-->

</beans>
            