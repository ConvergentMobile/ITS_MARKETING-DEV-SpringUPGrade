<beans
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:amq="http://activemq.apache.org/schema/core"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

  <!--  lets create an embedded ActiveMQ Broker -->
<!--
  <amq:broker useJmx="false" persistent="false">
    <amq:transportConnectors>
      <amq:transportConnector uri="vm://localhost" />
    </amq:transportConnectors>
  </amq:broker>
-->

   <!--  ActiveMQ destinations to use  -->
<!--
  <amq:queue id="destination"  physicalName="org.apache.activemq.spring.Test.spring.embedded"/>
-->

  <!-- JMS ConnectionFactory to use, configuring the embedded broker using XML -->
  <amq:connectionFactory id="jmsFactory" brokerURL="tcp://localhost:61616"/>

<bean id="destination"
        class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="US411.QUEUE" />
</bean>


  <!-- Spring JMS Template -->
  <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory">
      <!-- lets wrap in a pool to avoid creating a connection per send -->
      <bean class="org.springframework.jms.connection.SingleConnectionFactory">
        <property name="targetConnectionFactory">
          <ref local="jmsFactory" />
        </property>
      </bean>
    </property>
  </bean>

  <!-- a sample POJO consumer -->
  <bean id="consumer" class="jms.JMSConsumer">
  </bean>

  <!-- a sample POJO which uses a Spring JmsTemplate -->
  <bean id="producer" class="jms.JMSProducer">
    <property name="template">
      <ref bean="jmsTemplate"></ref>
    </property>

    <property name="destination">
      <ref bean="destination" />
    </property>
  </bean>

</beans>
